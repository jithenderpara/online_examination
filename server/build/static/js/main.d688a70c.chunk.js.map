{"version":3,"sources":["components/option/index.js","components/buttons/index.js","components/questions/index.js","components/stopwatch/index.js","components/rightPannel/index.js","components/apiEndpoints.js","exam.js","components/login/index.js","components/results/index.js","App.js","reportWebVitals.js","index.js"],"names":["Options","_ref","values","changeOptions","selected","tifOptions","Object","keys","map","key","React","createElement","class","htmlFor","type","id","checked","name","value","onChange","e","handleChange","Buttons","onClickCallback","onClick","event","Questions","questionInfo","question","clickCallback","saveOptions","userAns","setSelected","useState","useEffect","console","log","options","A","B","C","D","className","selectedClick","target","ans","answer","buttonClick","Stopwatch","timeCount","setTimeLeft","timeL","setTimeL","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","concat","toString","padStart","TtimerId","setInterval","prevTimeL","max","clearInterval","TotaltimerId","prevTimeLeft","min","RightPannel","count","selectedIndex","_ref2","getClass","i","classActive","Array","from","SAVE_RESULTS","GET_RESULTS","QUESTIONS","LOGIN","Exam","data","setData","userData","setuserData","setQuestion","questionId","setQuestionId","userAnsers","setuserAnsers","userSelected","setuserSelected","message","setMessage","navigate","useNavigate","fetch","then","response","json","newdata","catch","error","getQuestion","async","axios","post","results","email","length","saveResults","find","o","allAns","addOrReplace","array","element","findIndex","push","Login","setName","password","setPassword","onSubmit","preventDefault","user_email","user_password","required","Results","getResults","marks","src","alt","group","finalStatus","App","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.d688a70c.chunk.js","sourcesContent":["import './option.css';\r\nimport React, { useState, useEffect } from 'react';\r\nfunction Options({values, changeOptions, selected}) {\r\n    // const [selected, setSelected] = useState(null);\r\n    const handleChange=(e, key)=>{\r\n        // setSelected(key)\r\n        changeOptions(e, key)\r\n    }\r\n    var tifOptions = Object.keys(values).map(function(key) {\r\n        return <div class=\"option\">\r\n        <label htmlFor={key}>\r\n            <input type=\"radio\" id={key} checked={key===selected} name=\"answer\" value={key} onChange={(e, value) => {handleChange(e, key)}} />\r\n            {values[key]}\r\n        </label>\r\n    </div>\r\n    });\r\n    return (\r\n        <section class=\"answer-options\">\r\n             {tifOptions}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Options;\r\n","import './buttons.css';\r\nimport React, { Component }  from 'react';\r\nfunction Buttons({onClickCallback}) {\r\n    return (\r\n        <div class=\"buttons\">\r\n            <button class=\"grid-btn previous-btn\" onClick={(event)=>onClickCallback(event,'Previous')}>\r\n                Previous\r\n            </button>\r\n            <button class=\"grid-btn rev-btn\" onClick={(event)=>onClickCallback(event,'Review')}>\r\n                mark for Review and next\r\n            </button><button class=\"grid-btn next-btn\" onClick={(event)=>onClickCallback(event,'Next')}>\r\n                Next\r\n            </button><button class=\"grid-btn clear-ans\" onClick={(event)=>onClickCallback(event,'clear')}>\r\n                clear Answer\r\n            </button><button class=\"grid-btn finish-btn\" onClick={(event)=>onClickCallback(event,'Finish')}>\r\n                Finish\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;\r\n","import './questions.css';\r\nimport Options from '../option';\r\nimport Buttons from '../buttons';\r\nimport React, { useState, useEffect } from 'react';\r\nfunction Questions({ questionInfo = { question: \"\", id:0, value:null}, clickCallback, saveOptions, userAns={value:null}}) {    \r\n    // const value = userAns.value\r\n    // console.log(value, '00000000000000000000000000000000000000')\r\n    const [selected, setSelected] = useState(null);\r\n    useEffect(() => {\r\n        setSelected()\r\n    },[questionInfo.id])\r\n    console.log(questionInfo, '-------------------------question')\r\n    // const{question}= questionInfo\r\n    const options = { \"A\": questionInfo.A, \"B\": questionInfo.B, \"C\": questionInfo.C, \"D\": questionInfo.D }\r\n    // const qid = questionInfo.id\r\n    const buttonClick = (e, value) => {\r\n        setSelected(null)\r\n        clickCallback(e, value)\r\n    }\r\n    const selectedClick = (e, value) => {\r\n        console.log(value)        \r\n        setSelected(e.target.value)\r\n        saveOptions(e, { \"id\": questionInfo.id, \"question\": questionInfo.question, \"ans\": value, \"value\": questionInfo.answer })\r\n    }\r\n    //  const q= JSON.parse(questionInfo)\r\n    return (\r\n        <div>\r\n            <section className='questionInfo'>\r\n                {/* {JSON.stringify(props)} */}\r\n                {questionInfo && (\r\n                    <div>\r\n                        <p>{(questionInfo.id) + 1}{\". \"}{questionInfo.question}</p>\r\n                        <Options values={options} selected={selected}\r\n                            changeOptions={(e, value) => selectedClick(e, value)} />\r\n                        <Buttons onClickCallback={(e, value) => buttonClick(e, value)} />\r\n                    </div>)}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Questions;\r\n","import './stopwatch.css';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nfunction Stopwatch({clickCallback}) {\r\n    const initialTime = 0;\r\n    const Totaltime = 10;\r\n    const initial = Totaltime; // Initial time in seconds (1 hour)\r\n    const [timeCount, setTimeLeft] = useState(initialTime);\r\n    const [timeL, setTimeL] = useState(initial);\r\n    const formatTime = (seconds) => {\r\n        const hours = Math.floor(seconds / Totaltime);\r\n        const minutes = Math.floor((seconds % Totaltime) / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n    };\r\n    useEffect(() => {\r\n        const TtimerId = setInterval(() => {\r\n            if (timeL > 0) {\r\n                setTimeL(prevTimeL => Math.max(0, prevTimeL - 1));\r\n            } else {\r\n                clearInterval(TtimerId);\r\n                // Handle timer completion (e.g., display message)\r\n                clickCallback(null, 'Finish')\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(TtimerId);\r\n    }, []);\r\n    useEffect(() => {\r\n        const TotaltimerId = setInterval(() => {\r\n            if (timeCount < Totaltime) {\r\n                setTimeLeft(prevTimeLeft => Math.min(Totaltime, prevTimeLeft + 1));\r\n            } else {\r\n                clearInterval(TotaltimerId);\r\n                // Handle timer completion \r\n            }\r\n        }, 1000);\r\n        return () => clearInterval(TotaltimerId);\r\n    }, []);\r\n    return (\r\n        <div class=\"stopwatch\">\r\n            <div class=\"stopwatch\">\r\n                <h1 class=\"stopwatch-h\">\r\n                    Time Status\r\n                </h1>\r\n                {/* Display countdown */}\r\n                <span class=\"timer\">{formatTime(timeCount)}</span>\r\n                <div class=\"total-time-h\"><p>\r\n                    Total Time\r\n                    <span class=\"total-time\">{formatTime(timeL)}</span>\r\n                </p></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stopwatch;\r\n","import './rightPannel.css';\r\nimport SummaryGrid from '../summaryGrid';\r\nimport Stopwatch from '../stopwatch';\r\nimport React, { Component }  from 'react';\r\nfunction RightPannel({ count, selectedIndex, clickCallback }) {\r\n    let List = ({ value }) => {\r\n        console.log(value)\r\n        const getClass = (i, value) => {\r\n            let classActive = \"grid-item\"\r\n            if (i == value) {\r\n                classActive = \"grid-item active\"\r\n            } else if (i < value) {\r\n                classActive = \"grid-item selected\"\r\n            }\r\n            return classActive\r\n        }\r\n        return <div className=\"grid-container\">{Array.from(Array(count), (e, i) => {\r\n            return <div className={getClass(i, value)} key={i}><span></span>{i + 1}</div>\r\n        })}</div>\r\n    }\r\n    return (\r\n        <aside class=\"right-panel\">\r\n            <Stopwatch clickCallback={(e, value)=>clickCallback(e, value)}/>\r\n            <h1>Questions Summary</h1>\r\n            <List value={selectedIndex} />\r\n            {/* <SummaryGrid /> */}\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default RightPannel;\r\n","\r\nconst rootPath= \"/api/\"\r\nexport const SAVE_RESULTS = `${rootPath}setResults`\r\nexport const GET_RESULTS = `${rootPath}getResults`\r\nexport const QUESTIONS = `${rootPath}questions`\r\nexport const LOGIN = `${rootPath}login`","import './exam.css';\r\nimport axios from 'axios';\r\nimport Questions from './components/questions';\r\nimport RightPannel from './components/rightPannel';\r\nimport {SAVE_RESULTS, QUESTIONS} from './components/apiEndpoints';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\"\r\nfunction Exam() {\r\n  const [data, setData] = useState(null);\r\n  const [userData, setuserData] = useState(null);\r\n  const [question, setQuestion] = useState({});\r\n  const [questionId, setQuestionId] = useState(0);\r\n  const [userAnsers, setuserAnsers] = useState([]);\r\n  const [userSelected, setuserSelected] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate()\r\n  useEffect(() => {\r\n    fetch(QUESTIONS)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        const newdata = json\r\n        setData(newdata)\r\n        setQuestion(newdata[questionId])\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n  const addOrReplace = (array, element) => {\r\n    const i = array.findIndex(e => e.id === element.id);\r\n    if (i > -1) array[i] = element; // (2)\r\n    else array.push(element);\r\n    return array\r\n  }\r\n  const saveOptions = (e, value) => {\r\n    console.log(\"user selected options\", value)\r\n    const allAns = addOrReplace(userAnsers, value)\r\n    setuserAnsers(allAns)\r\n    console.log(allAns)\r\n\r\n  }\r\n  const saveResults = async (results) => {\r\n    try {\r\n      const response = await axios.post(SAVE_RESULTS, { results: results, email:'jithu@gmail.com', id:1 });\r\n      // Handle successful login (e.g., redirect to dashboard)\r\n      const data = response.data\r\n      if (data.length > 0) {\r\n        console.log('saved in DB successful:', response.data);\r\n        navigate(`/login`)\r\n      }\r\n      else {\r\n        console.error(data);\r\n        setMessage('Error in saving');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Error in saving');\r\n    }\r\n  }\r\n  const getQuestion = (e, value) => {\r\n    console.log(value, \"getQuestion----------- index\")\r\n    // setQuestion(data[1])\r\n\r\n    if (value === \"Previous\") {\r\n      setQuestionId(questionId - 1)\r\n      setQuestion(data[questionId - 1])\r\n    } else if (value === 'clear') {\r\n      setQuestionId(questionId)\r\n      setQuestion(data[questionId])\r\n    }\r\n    else if (value === 'Review') {\r\n      setQuestionId(questionId + 1)\r\n      setQuestion(data[questionId + 1])\r\n    }\r\n    else if (value === 'Finish') {\r\n      saveResults(userAnsers)\r\n      navigate(`/results`)\r\n    }\r\n    else {\r\n      setQuestionId(questionId + 1)\r\n      setQuestion(data[questionId + 1])\r\n    }\r\n    // findUserAns(question)\r\n  }\r\n  const findUserAns = (element) => {\r\n    const userSelected = userAnsers.find(o => o.id === element.id);\r\n    console.log(userSelected, '-userSelected')\r\n    if (userSelected) {\r\n      setuserSelected(userSelected.value)\r\n    } else {\r\n      setuserSelected(null)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div class=\"question-section\">\r\n        <section class=\"question\">\r\n          <Questions userAns={userAnsers.find(o => o.id === questionId)}\r\n            questionInfo={question}\r\n            clickCallback={(e, value) => getQuestion(e, value)}\r\n            saveOptions={(e, value) => saveOptions(e, value)} />\r\n          {data && <RightPannel count={data.length} selectedIndex={question.id} clickCallback={(e, value) => getQuestion(e, value)}/>}\r\n        </section>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Exam;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport {LOGIN} from '../apiEndpoints';\r\n\r\nimport axios from 'axios';\r\nconst Login = () => {\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate()\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(LOGIN, { user_email: name, user_password: password });\r\n      // Handle successful login (e.g., redirect to dashboard)\r\n      console.log('Login successful:', response.data);\r\n      const data = response.data\r\n      if (data.length > 0) {\r\n        navigate(`/`)\r\n        setMessage('Login successful');\r\n      }\r\n      else{\r\n        console.error(data);\r\n        setMessage('Invalid username or password');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import './index.css';\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {GET_RESULTS} from '../apiEndpoints';\r\nfunction Results({ count, selectedIndex, clickCallback }) {\r\n    const [message, setMessage] = useState('');\r\n    const [data, setData] = useState('');\r\n    let List = ({ value }) => {\r\n        console.log(value)\r\n        const getClass = (i, value) => {\r\n            let classActive = \"grid-item\"\r\n            if (i == value) {\r\n                classActive = \"grid-item active\"\r\n            } else if (i < value) {\r\n                classActive = \"grid-item selected\"\r\n            }\r\n            return classActive\r\n        }\r\n        return <div className=\"grid-container\">{Array.from(Array(count), (e, i) => {\r\n            return <div className={getClass(i, value)} key={i}><span></span>{i + 1}</div>\r\n        })}</div>\r\n    }\r\n    const getResults = async (email) => {\r\n        try {\r\n            const response = await axios.post(GET_RESULTS, { email: email });\r\n            const data = response.data\r\n            if (data.length > 0) {\r\n                console.log('saved in DB successful:', data);\r\n                setData(data[0])\r\n                setMessage('sucess here');\r\n            }\r\n            else {\r\n                console.error(data);\r\n                setMessage('Error in get results');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            setMessage('Error in results');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getResults('jithu@gmail.com')\r\n    }, [message])\r\n    return (\r\n        <section>\r\n            <div className=\"container-results\">\r\n                <div className=\"container-left\">\r\n                    <div className=\"title title-left white-color\">Your Result</div>\r\n                    <div className=\"circle\">\r\n                        <div className=\"circle-score white-color\">{data.marks}</div>\r\n                        <div className=\"circle-out-of white-color\">of 100</div>\r\n                    </div>\r\n                    <div className=\"container-left-bottom\">\r\n                        <div className=\"container-left-bottom-compliment white-color\">Great</div>\r\n                        {/* <div className=\"container-left-bottom-description\">\r\n                            <p className='white-color'>\r\n                                You scored\r\n                            </p>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container-right-box\"></div>\r\n                <div className=\"container-right\">\r\n                    <div className=\"title title-right\">Summary</div>\r\n                    <div className=\"stat-box\">\r\n                    <div className=\"stat stat-memory\">\r\n                            <div className=\"stat-part-left yellow\">\r\n                                <img src=\"/assets/images/icon-memory.svg\" alt=\"\" />Name\r\n                            </div>\r\n                            <div className=\"stat-part-right\">\r\n                                <span className=\"blue\">{data.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"stat stat-reaction\">\r\n                            <div className=\"stat-part-left red\">\r\n                                <img src=\"/assets/images/icon-reaction.svg\" alt=\"\" />Group\r\n                            </div>\r\n                            <div className=\"stat-part-right\">\r\n                                <span className=\"blue\">{data.group}</span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"stat stat-verbal\">\r\n                            <div className=\"stat-part-left green\">\r\n                                <img src=\"/assets/images/icon-verbal.svg\" alt=\"\" />Marks\r\n                            </div>\r\n                            <div className=\"stat-part-right\">\r\n                                <span className=\"blue\">{data.marks}</span> / 100\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"stat stat-visual\">\r\n                            <div className=\"stat-part-left purple\">\r\n                                <img src=\"/assets/images/icon-visual.svg\" alt=\"\" />Final Status\r\n                            </div>\r\n                            <div className=\"stat-part-right\">\r\n                                <span className=\"blue\">{data.finalStatus}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Results;\r\n","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Exam from './exam';\nimport Login from './components/login';\nimport Results from './components/results';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/\" element={<Exam />} />\n      <Route path=\"/results\" element={<Results />} />\n    </Routes>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}