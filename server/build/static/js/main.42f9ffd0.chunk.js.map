{"version":3,"sources":["components/option/index.js","components/buttons/index.js","components/questions/index.js","components/stopwatch/index.js","components/rightPannel/index.js","exam.js","components/login/index.js","App.js","reportWebVitals.js","index.js"],"names":["Options","_ref","values","changeOptions","selected","tifOptions","Object","keys","map","key","React","createElement","class","htmlFor","type","id","checked","name","value","onChange","e","handleChange","Buttons","onClickCallback","onClick","event","Questions","questionInfo","question","clickCallback","saveOptions","userAns","setSelected","useState","useEffect","console","log","options","A","B","C","D","selectedClick","target","ans","answer","buttonClick","Stopwatch","RightPannel","count","selectedIndex","_ref2","getClass","i","classActive","className","Array","from","Exam","data","setData","setQuestion","questionId","setQuestionId","userAnsers","setuserAnsers","userSelected","setuserSelected","fetch","then","response","json","newdata","item","idx","catch","error","find","o","getQuestion","allAns","addOrReplace","array","element","findIndex","push","length","Login","setName","password","setPassword","message","setMessage","navigate","useNavigate","onSubmit","async","preventDefault","axios","post","user_email","user_password","required","App","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.42f9ffd0.chunk.js","sourcesContent":["import './option.css';\r\nimport React, { useState, useEffect } from 'react';\r\nfunction Options({values, changeOptions, selected}) {\r\n    // const [selected, setSelected] = useState(null);\r\n    const handleChange=(e, key)=>{\r\n        // setSelected(key)\r\n        changeOptions(e, key)\r\n    }\r\n    var tifOptions = Object.keys(values).map(function(key) {\r\n        return <div class=\"option\">\r\n        <label htmlFor={key}>\r\n            <input type=\"radio\" id={key} checked={key===selected} name=\"answer\" value={key} onChange={(e, value) => {handleChange(e, key)}} />\r\n            {values[key]}\r\n        </label>\r\n    </div>\r\n    });\r\n    return (\r\n        <section class=\"answer-options\">\r\n             {tifOptions}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Options;\r\n","import './buttons.css';\r\nimport React, { Component }  from 'react';\r\nfunction Buttons({onClickCallback}) {\r\n    return (\r\n        <div class=\"buttons\">\r\n            <button class=\"grid-btn previous-btn\" onClick={(event)=>onClickCallback(event,'Previous')}>\r\n                Previous\r\n            </button>\r\n            <button class=\"grid-btn rev-btn\" onClick={(event)=>onClickCallback(event,'Review')}>\r\n                mark for Review and next\r\n            </button><button class=\"grid-btn next-btn\" onClick={(event)=>onClickCallback(event,'Next')}>\r\n                Next\r\n            </button><button class=\"grid-btn clear-ans\" onClick={(event)=>onClickCallback(event,'clear')}>\r\n                clear Answer\r\n            </button><button class=\"grid-btn finish-btn\" onClick={(event)=>onClickCallback(event,'Finish')}>\r\n                Finish\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;\r\n","import './questions.css';\r\nimport Options from '../option';\r\nimport Buttons from '../buttons';\r\nimport React, { useState, useEffect } from 'react';\r\nfunction Questions({ questionInfo = { question: \"\", id:0, value:null}, clickCallback, saveOptions, userAns={value:null}}) {    \r\n    // const value = userAns.value\r\n    // console.log(value, '00000000000000000000000000000000000000')\r\n    const [selected, setSelected] = useState(null);\r\n    useEffect(() => {\r\n        setSelected()\r\n    },[questionInfo.id])\r\n    console.log(questionInfo, '-------------------------question')\r\n    // const{question}= questionInfo\r\n    const options = { \"A\": questionInfo.A, \"B\": questionInfo.B, \"C\": questionInfo.C, \"D\": questionInfo.D }\r\n    // const qid = questionInfo.id\r\n    const buttonClick = (e, value) => {\r\n        setSelected(null)\r\n        clickCallback(e, value)\r\n    }\r\n    const selectedClick = (e, value) => {\r\n        console.log(value)        \r\n        setSelected(e.target.value)\r\n        saveOptions(e, { \"id\": questionInfo.id, \"question\": questionInfo.question, \"ans\": value, \"value\": questionInfo.answer })\r\n    }\r\n    //  const q= JSON.parse(questionInfo)\r\n    return (\r\n        <div>\r\n            <section>\r\n                {/* {JSON.stringify(props)} */}\r\n                {questionInfo && (\r\n                    <div>\r\n                        <p>{(questionInfo.id) + 1}{\". \"}{questionInfo.question}</p>\r\n                        <Options values={options} selected={selected}\r\n                            changeOptions={(e, value) => selectedClick(e, value)} />\r\n                        <Buttons onClickCallback={(e, value) => buttonClick(e, value)} />\r\n                    </div>)}\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Questions;\r\n","import './stopwatch.css';\r\nimport React, { Component }  from 'react';\r\nfunction Stopwatch() {\r\n    return (\r\n        <div class=\"stopwatch\">\r\n        <h1 class=\"stopwatch-h\">\r\n            Time Status\r\n        </h1>\r\n        <span class=\"timer\">00:00:00</span>\r\n        <div class=\"total-time-h\"><p>\r\n            Total Time\r\n            <span class=\"total-time\">00:00:00</span>\r\n        </p></div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Stopwatch;\r\n","import './rightPannel.css';\r\nimport SummaryGrid from '../summaryGrid';\r\nimport Stopwatch from '../stopwatch';\r\nimport React, { Component }  from 'react';\r\nfunction RightPannel({ count, selectedIndex }) {\r\n    let List = ({ value }) => {\r\n        console.log(value)\r\n        const getClass = (i, value) => {\r\n            let classActive = \"grid-item\"\r\n            if (i == value) {\r\n                classActive = \"grid-item active\"\r\n            } else if (i < value) {\r\n                classActive = \"grid-item selected\"\r\n            }\r\n            return classActive\r\n        }\r\n        return <div className=\"grid-container\">{Array.from(Array(count), (e, i) => {\r\n            return <div className={getClass(i, value)} key={i}><span></span>{i + 1}</div>\r\n        })}</div>\r\n    }\r\n    return (\r\n        <aside class=\"right-panel\">\r\n            <Stopwatch />\r\n            <h1>REASONING</h1>\r\n            <List value={selectedIndex} />\r\n            {/* <SummaryGrid /> */}\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default RightPannel;\r\n","import './exam.css';\r\nimport Questions from './components/questions';\r\nimport RightPannel from './components/rightPannel';\r\nimport React, { useState, useEffect } from 'react';\r\nfunction Exam() {\r\n  const [data, setData] = useState(null);\r\n  const [question, setQuestion] = useState({});\r\n  const [questionId, setQuestionId] = useState(0);\r\n  const [userAnsers, setuserAnsers] = useState([]);\r\n  const [userSelected, setuserSelected] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    fetch('http://localhost:3000/api/questions')\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        const newdata = json.map((item, idx) => ({\r\n          ...item,\r\n          id: idx\r\n        }))\r\n        setData(newdata)\r\n        setQuestion(newdata[questionId])\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n  const addOrReplace = (array, element) => {\r\n    const i = array.findIndex(e => e.id === element.id);\r\n    if (i > -1) array[i] = element; // (2)\r\n    else array.push(element);\r\n    return array\r\n  }\r\n  const saveOptions = (e, value) => {\r\n    console.log(\"user selected options\", value)\r\n    const allAns = addOrReplace(userAnsers, value)\r\n    setuserAnsers(allAns)\r\n    console.log(allAns)\r\n\r\n  }\r\n  const getQuestion = (e, value) => {\r\n    console.log(value, \"getQuestion----------- index\")\r\n    // setQuestion(data[1])\r\n\r\n    if (value === \"Previous\") {\r\n      setQuestionId(questionId - 1)\r\n      setQuestion(data[questionId - 1])\r\n    } else if (value === 'clear') {\r\n      setQuestionId(questionId)\r\n      setQuestion(data[questionId])\r\n    }\r\n    else if (value === 'Review') {\r\n      setQuestionId(questionId + 1)\r\n      setQuestion(data[questionId + 1])\r\n    }\r\n    else {\r\n      setQuestionId(questionId + 1)\r\n      setQuestion(data[questionId + 1])\r\n    }\r\n    // findUserAns(question)\r\n  }\r\n  const findUserAns = (element) => {\r\n    const userSelected = userAnsers.find(o => o.id === element.id);\r\n    console.log(userSelected, '-userSelected')\r\n    if (userSelected) {\r\n      setuserSelected(userSelected.value)\r\n    } else {\r\n      setuserSelected(null)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div class=\"question-section\">\r\n        <section class=\"question\">\r\n          <Questions userAns={userAnsers.find(o => o.id === questionId)}\r\n            questionInfo={question}\r\n            clickCallback={(e, value) => getQuestion(e, value)}\r\n            saveOptions={(e, value) => saveOptions(e, value)} />\r\n          {data && <RightPannel count={data.length} selectedIndex={question.id} />}\r\n        </section>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Exam;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport axios from 'axios';\r\nconst Login = () => {\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate()\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/login', { user_email: name, user_password: password });\r\n      // Handle successful login (e.g., redirect to dashboard)\r\n      console.log('Login successful:', response.data);\r\n      const data = response.data\r\n      if (data.length > 0) {\r\n        navigate(`/`)\r\n        setMessage('Login successful');\r\n      }\r\n      else{\r\n        console.error(data);\r\n        setMessage('Invalid username or password');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Exam from './exam';\nimport Login from './components/login';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/\" element={<Exam />} />\n    </Routes>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}